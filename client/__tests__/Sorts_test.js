// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Sorts$ReactHooksTemplate = require("../src/utils/Sorts.js");

var mock_Aatrox = /* record */[
  /* champion */"Aatrox",
  /* players : :: */[
    /* record */[
      /* championName */"Aatrox",
      /* accountId */"abc",
      /* name */"Bob",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */100,
      /* losses */1
    ],
    /* [] */0
  ]
];

var mock_Aatrox2 = /* record */[
  /* champion */"Aatrox",
  /* players : :: */[
    /* record */[
      /* championName */"Aatrox",
      /* accountId */"cdf",
      /* name */"Bob",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */1,
      /* losses */100
    ],
    /* [] */0
  ]
];

var mock_Aatrox3 = /* record */[
  /* champion */"Aatrox",
  /* players : :: */[
    /* record */[
      /* championName */"Aatrox",
      /* accountId */"adsfdf",
      /* name */"Bob",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */1,
      /* losses */100
    ],
    /* :: */[
      /* record */[
        /* championName */"Aatrox",
        /* accountId */"asdsad",
        /* name */"Bob",
        /* rank : Challenger */1,
        /* region : NorthAmerica */1,
        /* wins */1,
        /* losses */100
      ],
      /* [] */0
    ]
  ]
];

var mock_Bard = /* record */[
  /* champion */"Bard",
  /* players : :: */[
    /* record */[
      /* championName */"Bard",
      /* accountId */"asdasd",
      /* name */"Levi",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */1,
      /* losses */100
    ],
    /* [] */0
  ]
];

var mock_Kindred = /* record */[
  /* champion */"Kindred",
  /* players : :: */[
    /* record */[
      /* championName */"Kindred",
      /* accountId */"asdasd",
      /* name */"Chaser",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */50,
      /* losses */20
    ],
    /* [] */0
  ]
];

var mock_Kindred2 = /* record */[
  /* champion */"Kindred",
  /* players : :: */[
    /* record */[
      /* championName */"Kindred",
      /* accountId */"asdasdasd",
      /* name */"Chaser",
      /* rank : Challenger */1,
      /* region : NorthAmerica */1,
      /* wins */50,
      /* losses */20
    ],
    /* :: */[
      /* record */[
        /* championName */"Kindred",
        /* accountId */"asdfsazc",
        /* name */"Chaullenger",
        /* rank : Masters */3,
        /* region : EuropeWest */3,
        /* wins */9999,
        /* losses */5000
      ],
      /* [] */0
    ]
  ]
];

Jest.describe("Sorts", (function (param) {
        Jest.test("by length", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            mock_Aatrox,
                            /* :: */[
                              mock_Bard,
                              /* :: */[
                                mock_Kindred,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Sorts$ReactHooksTemplate.numberOfOneTricks(/* :: */[
                                    mock_Bard,
                                    /* :: */[
                                      mock_Aatrox,
                                      /* :: */[
                                        mock_Kindred,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("by length lexigraphically", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            mock_Aatrox3,
                            /* :: */[
                              mock_Kindred2,
                              /* :: */[
                                mock_Aatrox,
                                /* :: */[
                                  mock_Bard,
                                  /* [] */0
                                ]
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Sorts$ReactHooksTemplate.numberOfOneTricks(/* :: */[
                                    mock_Bard,
                                    /* :: */[
                                      mock_Aatrox,
                                      /* :: */[
                                        mock_Kindred2,
                                        /* :: */[
                                          mock_Aatrox3,
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("by winrate", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            mock_Aatrox,
                            /* :: */[
                              mock_Kindred,
                              /* :: */[
                                mock_Bard,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Sorts$ReactHooksTemplate.oneTricksByWinRate(/* :: */[
                                    mock_Bard,
                                    /* :: */[
                                      mock_Aatrox,
                                      /* :: */[
                                        mock_Kindred,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("by winrate lexigraphically", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  mock_Kindred,
                                  /* :: */[
                                    mock_Aatrox2,
                                    /* :: */[
                                      mock_Bard,
                                      /* [] */0
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](Sorts$ReactHooksTemplate.oneTricksByWinRate(/* :: */[
                                          mock_Bard,
                                          /* :: */[
                                            mock_Aatrox2,
                                            /* :: */[
                                              mock_Kindred,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

exports.mock_Aatrox = mock_Aatrox;
exports.mock_Aatrox2 = mock_Aatrox2;
exports.mock_Aatrox3 = mock_Aatrox3;
exports.mock_Bard = mock_Bard;
exports.mock_Kindred = mock_Kindred;
exports.mock_Kindred2 = mock_Kindred2;
/*  Not a pure module */
